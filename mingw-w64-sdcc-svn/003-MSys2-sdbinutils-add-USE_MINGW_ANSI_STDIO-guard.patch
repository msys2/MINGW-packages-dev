From 55542daa3e065f930be970c99fb8b7edfb21f321 Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Sun, 4 Oct 2020 13:21:33 -0400
Subject: sdbinutils: add __USE_MINGW_ANSI_STDIO guard

Helps to prevent Segmentation fault in building 32 bit pdk15-stack-auto/pdk15.lib
---
 sdcc/support/sdbinutils/bfd/bfd-in.h       | 2 +-
 sdcc/support/sdbinutils/bfd/bfd-in2.h      | 2 +-
 sdcc/support/sdbinutils/bfd/bfd.c          | 2 +-
 sdcc/support/sdbinutils/binutils/dwarf.c   | 2 +-
 sdcc/support/sdbinutils/binutils/nm.c      | 4 ++--
 sdcc/support/sdbinutils/binutils/prdbg.c   | 2 +-
 sdcc/support/sdbinutils/binutils/readelf.c | 4 ++--
 sdcc/support/sdbinutils/binutils/strings.c | 6 +++---
 8 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/sdcc/support/sdbinutils/bfd/bfd-in.h b/sdcc/support/sdbinutils/bfd/bfd-in.h
index 2195ce3db..e9cfe44a1 100644
--- a/sdcc/support/sdbinutils/bfd/bfd-in.h
+++ b/sdcc/support/sdbinutils/bfd/bfd-in.h
@@ -138,7 +138,7 @@ typedef BFD_HOST_U_64_BIT symvalue;
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined(__MSVCRT__) && (!defined( __USE_MINGW_ANSI_STDIO) || (__USE_MINGW_ANSI_STDIO == 0))
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff --git a/sdcc/support/sdbinutils/bfd/bfd-in2.h b/sdcc/support/sdbinutils/bfd/bfd-in2.h
index fb281916b..2bd00d327 100644
--- a/sdcc/support/sdbinutils/bfd/bfd-in2.h
+++ b/sdcc/support/sdbinutils/bfd/bfd-in2.h
@@ -145,7 +145,7 @@ typedef BFD_HOST_U_64_BIT symvalue;
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined (__MSVCRT__) && (!defined( __USE_MINGW_ANSI_STDIO) || (__USE_MINGW_ANSI_STDIO == 0))
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff --git a/sdcc/support/sdbinutils/bfd/bfd.c b/sdcc/support/sdbinutils/bfd/bfd.c
index 05d475daa..f80b629f4 100644
--- a/sdcc/support/sdbinutils/bfd/bfd.c
+++ b/sdcc/support/sdbinutils/bfd/bfd.c
@@ -826,7 +826,7 @@ _bfd_doprnt (FILE *stream, const char *format, union _bfd_doprnt_args *args)
 			break;
 		      case 2:
 		      default:
-#if defined (__MSVCRT__)
+#if defined (__MSVCRT__) && (!defined( __USE_MINGW_ANSI_STDIO) || (__USE_MINGW_ANSI_STDIO == 0))
 			sptr[-3] = 'I';
 			sptr[-2] = '6';
 			sptr[-1] = '4';
diff --git a/sdcc/support/sdbinutils/binutils/dwarf.c b/sdcc/support/sdbinutils/binutils/dwarf.c
index 6dee8aae5..d7996b79e 100644
--- a/sdcc/support/sdbinutils/binutils/dwarf.c
+++ b/sdcc/support/sdbinutils/binutils/dwarf.c
@@ -183,7 +183,7 @@ get_encoded_value (unsigned char **pdata,
 }
 
 #if defined HAVE_LONG_LONG && SIZEOF_LONG_LONG > SIZEOF_LONG
-# ifndef __MINGW32__
+#if !defined(__MINGW32__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 #  define DWARF_VMA_FMT		"ll"
 #  define DWARF_VMA_FMT_LONG	"%16.16llx"
 # else
diff --git a/sdcc/support/sdbinutils/binutils/nm.c b/sdcc/support/sdbinutils/binutils/nm.c
index e46fffc79..b591a8214 100644
--- a/sdcc/support/sdbinutils/binutils/nm.c
+++ b/sdcc/support/sdbinutils/binutils/nm.c
@@ -171,7 +171,7 @@ static char value_format_32bit[] = "%08lx";
 #if BFD_HOST_64BIT_LONG
 static char value_format_64bit[] = "%016lx";
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 static char value_format_64bit[] = "%016llx";
 #else
 static char value_format_64bit[] = "%016I64x";
@@ -302,7 +302,7 @@ set_print_radix (char *radix)
 #if BFD_HOST_64BIT_LONG
       value_format_64bit[5] = *radix;
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
       value_format_64bit[6] = *radix;
 #else
       value_format_64bit[7] = *radix;
diff --git a/sdcc/support/sdbinutils/binutils/prdbg.c b/sdcc/support/sdbinutils/binutils/prdbg.c
index 4b9fa06c2..97dce5b2d 100644
--- a/sdcc/support/sdbinutils/binutils/prdbg.c
+++ b/sdcc/support/sdbinutils/binutils/prdbg.c
@@ -502,7 +502,7 @@ print_vma (bfd_vma vma, char *buf, bfd_boolean unsignedp, bfd_boolean hexp)
 #if BFD_HOST_64BIT_LONG_LONG
   else if (sizeof (vma) <= sizeof (unsigned long long))
     {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
       if (hexp)
 	sprintf (buf, "0x%llx", (unsigned long long) vma);
       else if (unsignedp)
diff --git a/sdcc/support/sdbinutils/binutils/readelf.c b/sdcc/support/sdbinutils/binutils/readelf.c
index ae1cda9a7..9d5e7bc3d 100644
--- a/sdcc/support/sdbinutils/binutils/readelf.c
+++ b/sdcc/support/sdbinutils/binutils/readelf.c
@@ -1214,7 +1214,7 @@ dump_relocations (Filedata *          filedata,
 		  : "%12.12lx  %12.12lx ",
 		  offset, inf);
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 	  printf (do_wide
 		  ? "%16.16llx  %16.16llx "
 		  : "%12.12llx  %12.12llx ",
@@ -13255,7 +13255,7 @@ dump_section_as_strings (Elf_Internal_Shdr * section, Filedata * filedata)
 	{
 	  size_t maxlen = end - data;
 
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 	  /* PR 11128: Use two separate invocations in order to work
              around bugs in the Solaris 8 implementation of printf.  */
 	  printf ("  [%6tx]  ", data - start);
diff --git a/sdcc/support/sdbinutils/binutils/strings.c b/sdcc/support/sdbinutils/binutils/strings.c
index da044ac9c..b31be31c8 100644
--- a/sdcc/support/sdbinutils/binutils/strings.c
+++ b/sdcc/support/sdbinutils/binutils/strings.c
@@ -557,7 +557,7 @@ print_strings (const char *filename, FILE *stream, file_ptr address,
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 	        printf ("%7llo ", (unsigned long long) start);
 # else
 	        printf ("%7I64o ", (unsigned long long) start);
@@ -576,7 +576,7 @@ print_strings (const char *filename, FILE *stream, file_ptr address,
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 	        printf ("%7lld ", (unsigned long long) start);
 # else
 	        printf ("%7I64d ", (unsigned long long) start);
@@ -595,7 +595,7 @@ print_strings (const char *filename, FILE *stream, file_ptr address,
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || (defined(__USE_MINGW_ANSI_STDIO) && (__USE_MINGW_ANSI_STDIO == 1))
 	        printf ("%7llx ", (unsigned long long) start);
 # else
 	        printf ("%7I64x ", (unsigned long long) start);
-- 
